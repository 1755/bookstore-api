// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/authors/": {
            "get": {
                "description": "Returns a list of authors. Returns 500 if there is a database error. Returns 200 and the author data on success.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authors"
                ],
                "summary": "get authors",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit (default: 25, min: 1, max: 100)",
                        "name": "page[size]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cursor (min: 1, max: 4)",
                        "name": "page[cursor]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort (default: -updatedAt, allowed: -updatedAt, updatedAt, -name, name)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter name (default: empty, min: 2, max: 50)",
                        "name": "filter[name]",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Document-array_schemas_Resource-schemas_Author"
                        }
                    },
                    "400": {
                        "description": "On validation error",
                        "schema": {
                            "$ref": "#/definitions/schemas.DocumentError"
                        }
                    },
                    "500": {
                        "description": "On internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates an author in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authors"
                ],
                "summary": "create author",
                "parameters": [
                    {
                        "description": "Author data in json api format",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.Document-schemas_CreateResource-schemas_CreateAuthorRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Author created successfully",
                        "schema": {
                            "$ref": "#/definitions/schemas.Document-schemas_Resource-schemas_Author"
                        }
                    },
                    "400": {
                        "description": "On validation error",
                        "schema": {
                            "$ref": "#/definitions/schemas.DocumentError"
                        }
                    },
                    "500": {
                        "description": "On internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/authors/{id}": {
            "get": {
                "description": "Gets an author from the database by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authors"
                ],
                "summary": "get author by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Author ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Document-schemas_Resource-schemas_Author"
                        }
                    },
                    "400": {
                        "description": "On validation error",
                        "schema": {
                            "$ref": "#/definitions/schemas.DocumentError"
                        }
                    },
                    "404": {
                        "description": "On author not found",
                        "schema": {
                            "$ref": "#/definitions/schemas.DocumentError"
                        }
                    },
                    "500": {
                        "description": "On internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes an author from the system by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authors"
                ],
                "summary": "delete author by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Author ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "On validation error",
                        "schema": {
                            "$ref": "#/definitions/schemas.DocumentError"
                        }
                    },
                    "404": {
                        "description": "On author not found",
                        "schema": {
                            "$ref": "#/definitions/schemas.DocumentError"
                        }
                    },
                    "500": {
                        "description": "On internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates an author in the system by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authors"
                ],
                "summary": "update author by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Author ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Author data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.Document-schemas_UpdateResource-schemas_UpdateAuthorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Author updated",
                        "schema": {
                            "$ref": "#/definitions/schemas.Document-schemas_Resource-schemas_Author"
                        }
                    },
                    "400": {
                        "description": "On\tvalidation\terror",
                        "schema": {
                            "$ref": "#/definitions/schemas.DocumentError"
                        }
                    },
                    "404": {
                        "description": "On\tauthor not found",
                        "schema": {
                            "$ref": "#/definitions/schemas.DocumentError"
                        }
                    },
                    "500": {
                        "description": "On\tinternal server\terror",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/books/": {
            "get": {
                "description": "Returns a list of books. Returns 500 if there is a database error. Returns 200 and the book data on success.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "get books",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit (default: 25, min: 1, max: 100)",
                        "name": "page[size]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cursor (min: 1, max: 4)",
                        "name": "page[cursor]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort (default: -updatedAt, allowed: -updatedAt, updatedAt, -title, title)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter title (default: empty, min: 2, max: 50)",
                        "name": "filter[title]",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Document-array_schemas_Resource-schemas_Book"
                        }
                    },
                    "400": {
                        "description": "On validation error",
                        "schema": {
                            "$ref": "#/definitions/schemas.DocumentError"
                        }
                    },
                    "500": {
                        "description": "On internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a book in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "create book",
                "parameters": [
                    {
                        "description": "Book data in json api format",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.Document-schemas_CreateResource-schemas_CreateBookRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Book created successfully",
                        "schema": {
                            "$ref": "#/definitions/schemas.Document-schemas_Resource-schemas_Book"
                        }
                    },
                    "400": {
                        "description": "On validation error",
                        "schema": {
                            "$ref": "#/definitions/schemas.DocumentError"
                        }
                    },
                    "500": {
                        "description": "On internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/books/{id}": {
            "get": {
                "description": "Gets a book from the database by its ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "get book by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.Document-schemas_Resource-schemas_Book"
                        }
                    },
                    "400": {
                        "description": "On validation error",
                        "schema": {
                            "$ref": "#/definitions/schemas.DocumentError"
                        }
                    },
                    "404": {
                        "description": "On book not found",
                        "schema": {
                            "$ref": "#/definitions/schemas.DocumentError"
                        }
                    },
                    "500": {
                        "description": "On internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a book from the system by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "delete book by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "On validation error",
                        "schema": {
                            "$ref": "#/definitions/schemas.DocumentError"
                        }
                    },
                    "404": {
                        "description": "On book not found",
                        "schema": {
                            "$ref": "#/definitions/schemas.DocumentError"
                        }
                    },
                    "500": {
                        "description": "On internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates a book in the system by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "books"
                ],
                "summary": "update book by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Book ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Book data",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schemas.Document-schemas_UpdateResource-schemas_UpdateBookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Book updated",
                        "schema": {
                            "$ref": "#/definitions/schemas.Document-schemas_Resource-schemas_Book"
                        }
                    },
                    "400": {
                        "description": "On\tvalidation\terror",
                        "schema": {
                            "$ref": "#/definitions/schemas.DocumentError"
                        }
                    },
                    "404": {
                        "description": "On\tbook not found",
                        "schema": {
                            "$ref": "#/definitions/schemas.DocumentError"
                        }
                    },
                    "500": {
                        "description": "On\tinternal server\terror",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "schemas.Author": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "schemas.Book": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "publishedYear": {
                    "type": "integer"
                },
                "summary": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateAuthorRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "bio": {
                    "type": "string",
                    "maxLength": 5000
                },
                "name": {
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                }
            }
        },
        "schemas.CreateBookRequest": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "publishedYear": {
                    "type": "integer"
                },
                "summary": {
                    "type": "string",
                    "maxLength": 5000
                },
                "title": {
                    "type": "string",
                    "maxLength": 1024,
                    "minLength": 1
                }
            }
        },
        "schemas.CreateResource-schemas_CreateAuthorRequest": {
            "type": "object",
            "required": [
                "attributes",
                "type"
            ],
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/schemas.CreateAuthorRequest"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "schemas.CreateResource-schemas_CreateBookRequest": {
            "type": "object",
            "required": [
                "attributes",
                "type"
            ],
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/schemas.CreateBookRequest"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "schemas.Document-array_schemas_Resource-schemas_Author": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Resource-schemas_Author"
                    }
                },
                "links": {
                    "$ref": "#/definitions/schemas.DocumentLink"
                }
            }
        },
        "schemas.Document-array_schemas_Resource-schemas_Book": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Resource-schemas_Book"
                    }
                },
                "links": {
                    "$ref": "#/definitions/schemas.DocumentLink"
                }
            }
        },
        "schemas.Document-schemas_CreateResource-schemas_CreateAuthorRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/schemas.CreateResource-schemas_CreateAuthorRequest"
                },
                "links": {
                    "$ref": "#/definitions/schemas.DocumentLink"
                }
            }
        },
        "schemas.Document-schemas_CreateResource-schemas_CreateBookRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/schemas.CreateResource-schemas_CreateBookRequest"
                },
                "links": {
                    "$ref": "#/definitions/schemas.DocumentLink"
                }
            }
        },
        "schemas.Document-schemas_Resource-schemas_Author": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/schemas.Resource-schemas_Author"
                },
                "links": {
                    "$ref": "#/definitions/schemas.DocumentLink"
                }
            }
        },
        "schemas.Document-schemas_Resource-schemas_Book": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/schemas.Resource-schemas_Book"
                },
                "links": {
                    "$ref": "#/definitions/schemas.DocumentLink"
                }
            }
        },
        "schemas.Document-schemas_UpdateResource-schemas_UpdateAuthorRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/schemas.UpdateResource-schemas_UpdateAuthorRequest"
                },
                "links": {
                    "$ref": "#/definitions/schemas.DocumentLink"
                }
            }
        },
        "schemas.Document-schemas_UpdateResource-schemas_UpdateBookRequest": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/schemas.UpdateResource-schemas_UpdateBookRequest"
                },
                "links": {
                    "$ref": "#/definitions/schemas.DocumentLink"
                }
            }
        },
        "schemas.DocumentError": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/schemas.Error"
                    }
                }
            }
        },
        "schemas.DocumentLink": {
            "type": "object",
            "properties": {
                "first": {
                    "type": "string"
                },
                "next": {
                    "type": "string"
                },
                "prev": {
                    "type": "string"
                },
                "self": {
                    "type": "string"
                }
            }
        },
        "schemas.Error": {
            "type": "object",
            "properties": {
                "detail": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "schemas.Link": {
            "type": "object",
            "properties": {
                "self": {
                    "type": "string"
                }
            }
        },
        "schemas.Resource-schemas_Author": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/schemas.Author"
                },
                "id": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/schemas.Link"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "schemas.Resource-schemas_Book": {
            "type": "object",
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/schemas.Book"
                },
                "id": {
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/schemas.Link"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateAuthorRequest": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string",
                    "maxLength": 5000
                },
                "name": {
                    "type": "string",
                    "maxLength": 150,
                    "minLength": 1
                }
            }
        },
        "schemas.UpdateBookRequest": {
            "type": "object",
            "properties": {
                "publishedYear": {
                    "type": "integer"
                },
                "summary": {
                    "type": "string",
                    "maxLength": 5000
                },
                "title": {
                    "type": "string",
                    "maxLength": 1024,
                    "minLength": 1
                }
            }
        },
        "schemas.UpdateResource-schemas_UpdateAuthorRequest": {
            "type": "object",
            "required": [
                "attributes",
                "id",
                "type"
            ],
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/schemas.UpdateAuthorRequest"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "schemas.UpdateResource-schemas_UpdateBookRequest": {
            "type": "object",
            "required": [
                "attributes",
                "id",
                "type"
            ],
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/schemas.UpdateBookRequest"
                },
                "id": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
